---
name: Update Packages

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  detect-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.packages.outputs.matrix }}
      reviewers: ${{ steps.codeowners.outputs.reviewers }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@786fff0690178f1234e4e1fe9b536e94f5433196 # v20

      - name: Get package list
        id: packages
        run: |
          chmod +x .github/scripts/list-remote-packages.sh
          PACKAGES=$(.github/scripts/list-remote-packages.sh)
          echo "matrix={\"package\":$PACKAGES}" >> $GITHUB_OUTPUT
          echo "Found packages: $PACKAGES"

      - name: Extract reviewers from CODEOWNERS
        id: codeowners
        run: |
          REVIEWERS=$(grep -E '^\*\s+@' .github/CODEOWNERS | sed 's/^\*\s\+//' | sed 's/@//g' | tr '\n' ',' | sed 's/,$//')
          echo "reviewers=$REVIEWERS" >> $GITHUB_OUTPUT

  update-package:
    needs: detect-packages
    if: needs.detect-packages.outputs.matrix != '{"package":[]}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.detect-packages.outputs.matrix) }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"
          owner: "${{ github.repository_owner }}"

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Install Nix
        uses: ./.github/actions/setup-nix
        with:
          caches: false

      - name: Get current version
        id: version
        run: |
          VERSION=$(nix eval ".#${{ matrix.package }}.version" --raw 2>/dev/null || echo "unknown")
          echo "current=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Get package info
        id: info
        run: |
          chmod +x .github/scripts/get-package-info.sh
          PKG_INFO=$(.github/scripts/get-package-info.sh "${{ matrix.package }}")
          OWNER=$(echo "$PKG_INFO" | grep "^owner=" | cut -d= -f2)
          REPO=$(echo "$PKG_INFO" | grep "^repo=" | cut -d= -f2)
          echo "owner=$OWNER" >> $GITHUB_OUTPUT
          echo "repo=$REPO" >> $GITHUB_OUTPUT
          echo "branch=pkgs/${REPO}-${{ matrix.package }}" >> $GITHUB_OUTPUT

      - name: Check for existing PR
        id: check-pr
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          EXISTING_PR=$(gh pr list --head "${{ steps.info.outputs.branch }}" --state open --json number --jq '.[0].number' || echo "")
          if [ -n "$EXISTING_PR" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "⚠️  PR #$EXISTING_PR already exists, skipping"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Update package
        if: steps.check-pr.outputs.exists == 'false'
        run: |
          VERSION_REGEX='^v?([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$'
          nix run github:Mic92/nix-update -- "${{ matrix.package }}" \
            --flake \
            --version-regex "$VERSION_REGEX" || {
            echo "❌ nix-update failed for ${{ matrix.package }}"
            exit 1
          }

      - name: Get new version
        if: steps.check-pr.outputs.exists == 'false'
        id: new-version
        run: |
          VERSION=$(nix eval ".#${{ matrix.package }}.version" --raw 2>/dev/null || echo "unknown")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "New version: $VERSION"

      - name: Check if version changed
        if: steps.check-pr.outputs.exists == 'false'
        id: version-check
        run: |
          if [ "${{ steps.version.outputs.current }}" = "${{ steps.new-version.outputs.version }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "✓ Package is up to date"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Get changelog
        if: steps.check-pr.outputs.exists == 'false' && steps.version-check.outputs.changed == 'true'
        id: changelog
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          chmod +x .github/scripts/get-changelog.sh
          CHANGELOG=$(.github/scripts/get-changelog.sh \
            "${{ steps.info.outputs.owner }}" \
            "${{ steps.info.outputs.repo }}" \
            "${{ steps.version.outputs.current }}" \
            "${{ steps.new-version.outputs.version }}" \
            "$GH_TOKEN" || echo "")
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate PR body
        if: steps.check-pr.outputs.exists == 'false' && steps.version-check.outputs.changed == 'true'
        id: pr-body
        run: |
          chmod +x .github/scripts/create-pr-body.sh
          PR_BODY=$(.github/scripts/create-pr-body.sh \
            "${{ matrix.package }}" \
            "${{ steps.info.outputs.owner }}" \
            "${{ steps.info.outputs.repo }}" \
            "${{ steps.version.outputs.current }}" \
            "${{ steps.new-version.outputs.version }}" \
            "${{ steps.changelog.outputs.changelog }}")
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.check-pr.outputs.exists == 'false' && steps.version-check.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "Update ${{ steps.info.outputs.owner }}/${{ steps.info.outputs.repo }} (${{ steps.version.outputs.current }} → ${{ steps.new-version.outputs.version }})"
          committer: "${{ secrets.BOT_USERNAME }} <${{ secrets.BOT_USER_EMAIL }}>"
          author: "${{ secrets.BOT_USERNAME }} <${{ secrets.BOT_USER_EMAIL }}>"
          branch: ${{ steps.info.outputs.branch }}
          delete-branch: true
          title: "Update package ${{ steps.info.outputs.owner }}/${{ steps.info.outputs.repo }} (${{ steps.version.outputs.current }} → ${{ steps.new-version.outputs.version }})"
          body: ${{ steps.pr-body.outputs.body }}
          labels: |
            dependencies
            automated
          reviewers: ${{ needs.detect-packages.outputs.reviewers }}
