---
name: Build and diff Nix systems

on:
  pull_request:
  workflow_dispatch:
  workflow_run:
    workflows: ["update-pkgs"]
    types:
      - completed
  push:
    branches:
      - main
    paths:
      - "**.nix"
      - "flake.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27

      # - name: Install Lix
      #   run: curl -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm --extra-conf="trusted-users = root runner"

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#evalHosts')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: show output
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.matrix) }}" >> "${GITHUB_STEP_SUMMARY}"

  nix-build:
    if: github.event.pull_request.draft == false
    needs: nix-matrix
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}

    runs-on: ${{ matrix.ghSystem }}
    steps:
      - name: maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 38912
          swap-size-mb: 4096
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-docker-images: true
          remove-codeql: true

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Install Lix
      #   run: curl -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm --extra-conf="trusted-users = root runner"

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v13

      - name: Set up Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: Setup Attic cache
        uses: ryanccn/attic-action@v0.2.1
        with:
          endpoint: "${{ secrets.ATTIC_ENDPOINT }}"
          cache: "${{ secrets.ATTIC_CACHE }}"
          token: "${{ secrets.ATTIC_TOKEN }}"

      - name: Set up Cachix
        uses: cachix/cachix-action@v15
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          name: krezh
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous ${{ matrix.host }} system
        run: |
          nix build \
            "github:krezh/nix-config#top.${{ matrix.host }}" \
            --log-format raw \
            --profile ./profile \
            --accept-flake-config

      - name: Build new ${{ matrix.host }} system
        run: |
          set -o pipefail
          nix build \
            ".#top.${{ matrix.host }}" \
            --profile ./profile \
            --accept-flake-config \
            --fallback \
            --log-format raw \
             > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          if [ -n "$drv" ]; then
            nix log "$drv"
            echo "$drv"
          fi
          exit 1

      - name: Diff profile
        id: diff
        run: |
          nix profile diff-closures --profile ./profile
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          nix profile diff-closures --profile ./profile | perl -pe 's/\e\[[0-9;]*m(?:\e\[K)?//g' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.${{ matrix.host }}"
          message: |
            ### Report for `${{ matrix.host }}`

            <summary> Version changes </summary> <br>
            <pre> ${{ steps.diff.outputs.diff }} </pre>

  nix-build-success:
    if: ${{ always() }}
    needs:
      - nix-build
    name: Nix Build Successful
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
