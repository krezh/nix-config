---
name: Build and diff Nix systems
on:
  pull_request:
    paths-ignore: ["pkgs/**", ".github/**"]
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main"]
    paths:
      - "**.nix"
      - "flake.lock"
      - "modules/**"
      - "hosts/**"
permissions:
  id-token: "write"
  contents: "read"
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true
env:
  EXCLUDED_HOSTS: '["nixos-livecd"]'
  TMPDIR: /tmp
  CACHE_NAME: krezh
  NIX_CONFIG: |
    lazy-trees = true
    eval-cores = 0
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@2c9db80fb984ceb1bcaa77cdda3fdf8cfba92035 # v34
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix_conf: ${{ env.NIX_CONFIG }}

      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        id: cache
        with:
          primary-key: nix-flake-inputs-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-flake-inputs-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-flake-inputs-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never

      - run: nix build .#gc-keep # this keeps stuffs from getting garbage collected
        if: steps.cache.outputs.hit-primary-key != 'true'

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#evalHosts' | jq -cM --argjson exclude_hosts '${{ env.EXCLUDED_HOSTS }}' 'del(.include[] | select(.host as $host | $exclude_hosts | index($host)))')"

          # Validate matrix isn't empty
          if [ "$(echo "$matrix" | jq '.include | length')" -eq 0 ]; then
            echo "Error: No hosts to build"
            exit 1
          fi

          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: show output
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.matrix) }}" >> "${GITHUB_STEP_SUMMARY}"

  nix-build:
    name: Build ${{ matrix.host }}
    if: github.event.pull_request.draft == false
    needs: nix-matrix
    timeout-minutes: 60
    permissions:
      pull-requests: write
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 1 }}

      - name: Nothing but Nix
        uses: wimpysworld/nothing-but-nix@6af122a9403f936ef689e44cc013ae3f3e2f1c3b # v6
        with:
          hatchet-protocol: "cleave"
          witness-carnage: false
          nix-permission-edict: true

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@2c9db80fb984ceb1bcaa77cdda3fdf8cfba92035 # v34
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix_conf: ${{ env.NIX_CONFIG }}

      - uses: nix-community/cache-nix-action/restore@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        with:
          primary-key: nix-flake-inputs-${{ hashFiles('**/*.nix', '**/flake.lock') }}

      - name: Cache built systems
        uses: actions/cache@v4
        with:
          path: |
            result-previous
            result-new
          key: nix-build-${{ matrix.host }}-${{ github.sha }}
          restore-keys: |
            nix-build-${{ matrix.host }}-

      - name: Setup Cachix
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        with:
          name: ${{ env.CACHE_NAME }}
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: true

      - name: Setup Attic
        uses: ryanccn/attic-action@7fbafba3978e86e585cb68a82c08b30f3672b62d # v0.4.0
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ secrets.ATTIC_CACHE }}
          token: ${{ secrets.ATTIC_TOKEN }}
          skip-push: true

      - name: Install NVD
        run: nix profile install nixpkgs#nvd

      - name: Build previous ${{ matrix.host }} system
        if: ${{ github.ref_name != 'main' }}
        run: |
          set -o pipefail
          nix build \
            "github:${{ github.repository }}#top.${{ matrix.host }}" \
            --log-format raw \
            --fallback \
            --no-write-lock-file \
            -o result-previous

      - name: Build new ${{ matrix.host }} system
        id: build
        run: |
          set -o pipefail
          result=$(nix build \
            ".#top.${{ matrix.host }}" \
            -o result-new \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            --print-out-paths)
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Push to caches
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        continue-on-error: true
        run: |
          cachix push "${{ env.CACHE_NAME }}" "${{ steps.build.outputs.result }}" &
          attic push "${{ secret.ATTIC_CACHE }}" "${{ steps.build.outputs.result }}" &
          wait

      - name: Diff profile
        if: ${{ github.ref_name != 'main' }}
        id: diff
        run: |
          delimiter="$(openssl rand -hex 16)"
          {
            echo "diff<<${delimiter}"
            if nvd --color never diff ./result-previous ./result-new > diff.txt 2>&1; then
              sed '/<<</d; />>>/d' diff.txt
            else
              echo "⚠️ No differences found or diff failed"
            fi
            echo "${delimiter}"
          } >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        if: ${{ github.ref_name != 'main' }}
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.${{ matrix.host }}"
          message: |
            ### Report for `${{ matrix.host }}`
            ```
            ${{ steps.diff.outputs.diff }}
            ```

      - name: Add build summary
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo "### ✅ Built ${{ matrix.host }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Result: ${{ steps.build.outputs.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Upload build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-${{ matrix.host }}
          path: |
            *.log
            diff.txt
          retention-days: 7
          if-no-files-found: ignore
