name: Build and diff Nix systems
on:
  pull_request:
    paths-ignore: ["pkgs/**", ".github/**"]
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main"]
    paths: ["**.nix", "flake.nix"]
permissions:
  id-token: "write"
  contents: "read"
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true
env:
  EXCLUDED_HOSTS: '["nixos-livecd"]'
  TMPDIR: /tmp
jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            accept-flake-config = true
            always-allow-substitutes = true
            builders-use-substitutes = true

      - name: Check Flake Inputs
        uses: DeterminateSystems/flake-checker-action@3164002371bc90729c68af0e24d5aacf20d7c9f6 # v12

      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#evalHosts' | jq -cM --argjson exclude_hosts '${{ env.EXCLUDED_HOSTS }}' 'del(.include[] | select(.host as $host | $exclude_hosts | index($host)))')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: show output
        run: |
          echo "${{ toJson(steps.set-matrix.outputs.matrix) }}" >> "${GITHUB_STEP_SUMMARY}"

  nix-build:
    if: github.event.pull_request.draft == false
    needs: nix-matrix
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.nix-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 1

      - name: Nothing but Nix
        uses: wimpysworld/nothing-but-nix@6af122a9403f936ef689e44cc013ae3f3e2f1c3b # v6
        with:
          hatchet-protocol: "cleave"
          witness-carnage: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@90bb610b90bf290cad97484ba341453bd1cbefea # v19
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          extra-conf: |
            accept-flake-config = true
            always-allow-substitutes = true
            builders-use-substitutes = true

      - name: Setup Cachix
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          name: krezh
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Setup FlakeHub Cache
        uses: DeterminateSystems/flakehub-cache-action@134cf641155463d87d343c6cb2b7970089967b99 # v2

      - name: Install NVD
        run: nix profile install nixpkgs#nvd

      - name: Garbage collect build dependencies
        run: nix-collect-garbage

      - name: Build previous ${{ matrix.host }} system
        if: ${{ github.ref_name != 'main' }}
        run: |
          nix build \
            "github:${{ github.repository }}#top.${{ matrix.host }}" \
            --log-format raw \
            --fallback \
            --no-write-lock-file \
            -o result-previous \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Build new ${{ matrix.host }} system
        run: |
          set -o pipefail
          nix build \
            ".#top.${{ matrix.host }}" \
            -o result-new \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            > >(tee stdout.log) 2> >(tee /tmp/nix-build-err.log >&2)

      - name: Output build failure
        if: failure()
        run: |
          drv=$(grep "For full logs, run" /tmp/nix-build-err.log | grep -oE "/nix/store/.*.drv")
          if [ -n "$drv" ]; then
            nix log "$drv"
            echo "$drv"
          fi
          exit 1

      - name: Diff profile
        if: ${{ github.ref_name != 'main' }}
        id: diff
        run: |
          delimiter="$(openssl rand -hex 16)"
          echo "diff<<${delimiter}" >> "${GITHUB_OUTPUT}"
          nvd --color never diff ./result-previous ./result-new | sed '/<<</d; />>>/d' >> "${GITHUB_OUTPUT}"
          echo "${delimiter}" >> "${GITHUB_OUTPUT}"

      - name: Comment report in pr
        if: ${{ github.ref_name != 'main' }}
        uses: marocchino/sticky-pull-request-comment@773744901bac0e8cbb5a0dc842800d45e9b2b405 # v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ".#top.${{ matrix.host }}"
          message: |
            ### Report for `${{ matrix.host }}`
            ```
            ${{ steps.diff.outputs.diff }}
            ```
  nix-build-success:
    if: ${{ always() }}
    needs:
      - nix-build
    name: Nix Build Successful
    runs-on: nix-config-runner
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Check matrix status
        run: exit 1
