---
name: Build Nix
on:
  pull_request:
    paths-ignore: ["pkgs/**", ".github/**"]
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main"]
    paths:
      - "**.nix"
      - "flake.lock"
      - "modules/**"
      - "hosts/**"
permissions:
  id-token: "write"
  contents: "read"
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true
env:
  CACHE_NAME: krezh
  NIX_CONFIG: |
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
jobs:
  ghMatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@2c9db80fb984ceb1bcaa77cdda3fdf8cfba92035 # v34
        with:
          nix_conf: ${{ env.NIX_CONFIG }}

      - uses: nix-community/cache-nix-action@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        id: cache
        with:
          primary-key: nix-flake-inputs-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-flake-inputs-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-flake-inputs-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never

      - run: nix build .#top
        if: steps.cache.outputs.hit-primary-key != 'true'

      - id: set-matrix
        name: Generate Hosts Matrix
        run: |
          set -Eeu
          matrix=$(nix eval --json '.#ghMatrix')
          # Validate matrix isn't empty
          if [ "$(echo "$matrix" | jq '.include | length')" -eq 0 ]; then
            echo "Error: No hosts to build"
            exit 1
          fi
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

      - name: Show matrix summary
        run: |
          matrix='${{ steps.set-matrix.outputs.matrix }}'
          {
            echo "## üîç Build Matrix Generated"
            echo ""
            echo "**Total hosts to build:** $(echo "$matrix" | jq '.include | length')"
            echo ""
            echo "### Hosts:"
            echo "$matrix" | jq -r '.include[] | "- \`" + .host + "\`"'
            echo ""
            echo "<details>"
            echo "<summary>View raw matrix JSON</summary>"
            echo ""
            echo '```json'
            echo '${{ toJson(steps.set-matrix.outputs.matrix) }}'
            echo '```'
            echo "</details>"
          } >> "${GITHUB_STEP_SUMMARY}"

  nix-build:
    name: Build ${{ matrix.host }}
    if: github.event.pull_request.draft == false
    needs: ghMatrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.ghMatrix.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Nothing but Nix
        uses: wimpysworld/nothing-but-nix@6af122a9403f936ef689e44cc013ae3f3e2f1c3b # v6
        with:
          hatchet-protocol: cleave
          nix-permission-edict: true

      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@2c9db80fb984ceb1bcaa77cdda3fdf8cfba92035 # v34
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          nix_conf: ${{ env.NIX_CONFIG }}

      - uses: nix-community/cache-nix-action/restore@135667ec418502fa5a3598af6fb9eb733888ce6a # v6.1.3
        with:
          primary-key: nix-flake-inputs-${{ hashFiles('**/*.nix', '**/flake.lock') }}

      - name: Setup Cachix
        uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        with:
          name: ${{ env.CACHE_NAME }}
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Setup Attic
        uses: ryanccn/attic-action@7fbafba3978e86e585cb68a82c08b30f3672b62d # v0.4.0
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        with:
          endpoint: ${{ secrets.ATTIC_ENDPOINT }}
          cache: ${{ secrets.ATTIC_CACHE }}
          token: ${{ secrets.ATTIC_TOKEN }}

      - name: Build ${{ matrix.host }}
        id: build
        run: |
          set -o pipefail
          result=$(nix build \
            ".#top.${{ matrix.host }}" \
            -o result \
            --fallback \
            --no-write-lock-file \
            --log-format raw \
            --print-out-paths)
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Add build summary
        run: |
          {
            echo "## ‚úÖ Build Successful: \`${{ matrix.host }}\`"
            echo ""
            echo "| Property | Value |"
            echo "|----------|--------|"
            echo "| **Host** | \`${{ matrix.host }}\` |"
            echo "| **Commit** | \`${{ github.sha }}\` |"
            echo "| **Runner** | \`${{ matrix.runner }}\` |"
            echo "| **Result Path** | \`${{ steps.build.outputs.result }}\` |"
            echo "| **Workflow** | [\`${{ github.workflow }}\`](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) |"
            echo ""
            echo "### üéØ Build Details"
            echo "- **Event:** ${{ github.event_name }}"
            echo "- **Ref:** ${{ github.ref }}"
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              echo "- **PR:** [#${{ github.event.number }}](${{ github.event.pull_request.html_url }})"
            fi
          } >> "${GITHUB_STEP_SUMMARY}"
