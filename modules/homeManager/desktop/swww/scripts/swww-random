#!/usr/bin/env bash
set -euo pipefail

show_help() {
  cat <<EOF
Usage: $0 -d <image-directory> -i <interval>
  -d, --image-directory  directory containing images
  -i, --interval         seconds to wait between images
  -h, --help             show this help
EOF
}

IMAGE_DIRECTORY=""
INTERVAL=""

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -d|--image-directory) IMAGE_DIRECTORY="$2"; shift ;;
    -i|--interval) INTERVAL="$2"; shift ;;
    -h|--help) show_help; exit 0 ;;
    *) echo "Unknown parameter passed: $1"; show_help; exit 1 ;;
  esac
  shift
done

if [[ -z "${IMAGE_DIRECTORY:-}" || -z "${INTERVAL:-}" ]]; then
  echo "Error: Both image directory and interval are required"
  show_help
  exit 1
fi

# Validate image directory exists
if [[ ! -d "$IMAGE_DIRECTORY" ]]; then
  echo "Error: Image directory '$IMAGE_DIRECTORY' does not exist"
  exit 1
fi

# Check if swww is available
if ! command -v swww >/dev/null 2>&1; then
  echo "Error: swww command not found. Please install swww."
  exit 1
fi

# Check if swww daemon is running
if ! swww query >/dev/null 2>&1; then
  echo "Error: swww daemon is not running. Please start it with 'swww init'"
  exit 1
fi

echo "Image directory: $IMAGE_DIRECTORY"
echo "Interval: $INTERVAL"

# Print swww configuration (use defaults if not set)
echo "Transition FPS: ${SWWW_TRANSITION_FPS:-30}"
echo "Transition Step: ${SWWW_TRANSITION_STEP:-90}"
echo "Transition Type: ${SWWW_TRANSITION:-any}"
echo "Transition Position: ${SWWW_TRANSITION_POS:-center}"

IMAGE_EXTENSIONS="jpg jpeg png bmp gif webp pnm tga tiff farbfeld svg"

# Build find command arguments
# Note: We'll use -L flag with find to follow symlinks
find_args=( -type f \( )
for ext in $IMAGE_EXTENSIONS; do
  find_args+=( -iname "*.${ext}" -o )
done
# Remove the last -o
unset 'find_args[${#find_args[@]}-1]'
find_args+=( \) -print0 )

# Function to display image with error handling
display_image() {
  local img="$1"
  echo "Displaying image: $img"

  # Check if file still exists (it might have been deleted)
  if [[ ! -f "$img" ]]; then
    echo "Warning: Image file no longer exists: $img"
    return 1
  fi

  # Try to display the image
  if ! swww img "$img" 2>/dev/null; then
    echo "Warning: Failed to display image: $img"
    return 1
  fi

  return 0
}

# Check if there are any images in the directory
echo "Scanning for images..."
if ! find -L "$IMAGE_DIRECTORY" "${find_args[@]}" | head -1 | grep -q .; then
  echo "Error: No images found in '$IMAGE_DIRECTORY'"
  echo "Supported formats: $IMAGE_EXTENSIONS"
  echo "Note: Symlinks are followed automatically"
  exit 1
fi

echo "Starting slideshow..."

# Main loop: find -> shuffle -> display
while true; do
  # Create array of images to avoid issues with empty results
  mapfile -d '' images < <(find -L "$IMAGE_DIRECTORY" "${find_args[@]}" 2>/dev/null | shuf -z)

  if [[ ${#images[@]} -eq 0 ]]; then
    echo "Warning: No images found in current scan, retrying in $INTERVAL seconds..."
    sleep "$INTERVAL"
    continue
  fi

  for img in "${images[@]}"; do
    # Skip empty entries
    [[ -n "$img" ]] || continue

    # Try to display the image
    if display_image "$img"; then
      sleep "$INTERVAL"
    else
      # If image fails, try the next one immediately
      continue
    fi
  done
done
