#!/usr/bin/env bash
set -euo pipefail

show_help() {
  cat <<EOF
Usage: $0 -d <image-directory> -i <interval>
  -d, --image-directory  directory containing images
  -i, --interval         seconds to wait between images
  -h, --help             show this help
EOF
}

IMAGE_DIRECTORY=""
INTERVAL=""

while [[ "$#" -gt 0 ]]; do
  case $1 in
    -d|--image-directory) IMAGE_DIRECTORY="$2"; shift ;;
    -i|--interval) INTERVAL="$2"; shift ;;
    -h|--help) show_help; exit 0 ;;
    *) echo "Unknown parameter passed: $1"; show_help; exit 1 ;;
  esac
  shift
done

if [[ -z "${IMAGE_DIRECTORY:-}" || -z "${INTERVAL:-}" ]]; then
  echo "Usage: $0 -d <image-directory> -i <interval>"
  exit 1
fi

echo "Image directory: $IMAGE_DIRECTORY"
echo "Interval: $INTERVAL"

echo "Transition FPS: $SWWW_TRANSITION_FPS"
echo "Transition Step: $SWWW_TRANSITION_STEP"
echo "Transition Type: $SWWW_TRANSITION_TYPE"
echo "Transition Position: $SWWW_TRANSITION_POS"

IMAGE_EXTENSIONS="jpg jpeg png bmp gif webp pnm tga tiff farbfeld svg"

find_args=( -type f \( )
for ext in $IMAGE_EXTENSIONS; do
  find_args+=( -iname "*.${ext}" -o )
done
unset 'find_args[${#find_args[@]}-1]'
find_args+=( \) -print0 )

# main loop: find -> shuffle -> display
while true; do
  find "$IMAGE_DIRECTORY" "${find_args[@]}" \
    | shuf -z \
    | while IFS= read -r -d '' img; do
        swww img "$img"
        sleep "$INTERVAL"
      done
done
